package gpj.jdkproxy;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Proxy;

import gpj.proxy.Car;
import gpj.proxy.Moveable;

public class Test {
/**
 * JDK动态代理测试
 */
	public static void main(String[] args)
	{
		Car car = new Car();
		InvocationHandler handler =new TimeHandler(car);
		Class<?> class1 = car.getClass();
		/**
		 * loader 被代理类类加载器
		 * interfaces 实现接口
		 * h InvocationHandler
		 */
		 Moveable moveable= (Moveable)Proxy.newProxyInstance(class1.getClassLoader(), 
				class1.getInterfaces(), handler);
		 
		 moveable.move();
	}
}
